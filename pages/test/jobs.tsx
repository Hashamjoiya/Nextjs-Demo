import dynamic from 'next/dynamic'
import Head from 'next/head'
import { MouseEvent, Suspense, useState } from 'react'
import styles from '../../styles/Home.module.css'

const DynamicDescription = dynamic(() => import('../../components/desciption'), {
    suspense: true,
})

export interface JobData {
    jobId: string,
    jobTitle: string,
    jobDescription: string,
    companyName: string
}

export default function Jobs(props: { data: JobData[] }) {
    //local state for jobs to facilitate filtering & pas week data
    const [jobs, setJobs] = useState<JobData[]>(props.data);
    const [showSearch, setSearch] = useState(false); // for state management between showing input

    // api call to fetch past week data
    const getPastWeekJobs = async (event: MouseEvent) => {
        event?.preventDefault();
        const res = await fetch(`https://www.zippia.com/api/jobs/`, {
            method: 'POST',
            headers: new Headers({ 'content-type': 'application/json' }),
            body: JSON.stringify({
                companySkills: true,
                dismissedListingHashes: [],
                fetchJobDesc: true,
                jobTitle: 'Business Analyst',
                locations: [],
                numJobs: 10,
                postingDateRange: '7d',
                previousListingHashes: []
            })
        })
        const data = await res.json();
        setJobs(data.jobs);
    }

    // changes state for displaying input field
    const toggleSearch = (event: MouseEvent) => {
        event.preventDefault();

        // if last state was show input, then we need to reset results too
        if (showSearch) setJobs(props.data)
        setSearch(!showSearch);
    }

    const filterByCompany = (value: string) => {
        if (!value) return;
        if (value === '') setJobs(props.data);

        setJobs(props.data.filter(job => job.companyName.search(value) > -1))
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Jobs Demo</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Welcome to <span>API Demo</span>
                </h1>

                <div className={styles.gridlinks}>
                    {!showSearch &&
                        <a href="" className={styles.card} onClick={(e) => toggleSearch(e)}>
                            <span className={styles.label}>By Company</span>
                        </a>
                    }
                    {showSearch &&
                        <>
                            <input className={styles.label} onClick={(e) => e.stopPropagation()} onChange={(e) => filterByCompany(e.target.value)} type='text' placeholder='Company Name' />
                            <span className={styles.closebutton} onClick={(e) => toggleSearch(e)}>x</span>
                        </>
                    }

                    <a href="" className={styles.card} onClick={(e) => getPastWeekJobs(e)}>
                        <span className={styles.label}>Past Week</span>
                    </a>
                </div>

                <div className={styles.jobslist}>
                    {jobs.map(job =>
                        <div key={job.jobId} className={styles.card}>
                            <h2>{job.jobTitle}</h2>
                            <div className={styles.company}>{job.companyName}</div>
                            <Suspense fallback={`Loading...`}>
                                <DynamicDescription jobDescription={job.jobDescription} />
                            </Suspense>
                        </div>
                    )}
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://github.com/Hashamjoiya"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Github Repository
                </a>
            </footer>
        </div>
    )
}

export async function getServerSideProps() {
    // Fetch data from zippia api
    const res = await fetch(`https://www.zippia.com/api/jobs/`, {
        method: 'POST',
        headers: new Headers({ 'content-type': 'application/json' }),
        body: JSON.stringify({
            companySkills: true,
            dismissedListingHashes: [],
            fetchJobDesc: true,
            jobTitle: 'Business Analyst',
            locations: [],
            numJobs: 10,
            previousListingHashes: []
        })
    })
    const data = await res.json()

    // Pass data to the page via props
    return { props: { data: data.jobs } }
}
